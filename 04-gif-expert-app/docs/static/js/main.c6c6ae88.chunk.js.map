{"version":3,"sources":["components/addCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GrifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAkCeA,MA/Bf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EACAC,mBAAS,IADT,mBAC3BC,EAD2B,KACfC,EADe,KAelC,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAIP,GAAJ,mBAAmBO,OAC3CN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAjBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,kDACmCC,UAAUH,GAD7C,gEAEFI,MAAMF,GAFJ,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAa,SAAC,GAAgB,IAAfb,EAAc,EAAdA,IAAKU,EAAS,EAATA,MAE7B,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAAY,ECDX,SAAEA,GAAa,IAAD,EAGZd,mBAAS,CAC7BqB,KAAM,GACNa,SAAS,IALuB,mBAG7BC,EAH6B,KAGtBC,EAHsB,KAmBpC,OAXAC,qBAAU,WACFxB,EAAQC,GACPwB,MAAM,SAAAC,GACCH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAG3B,CAACpB,IAGIqB,EDhBeK,CAAa1B,GAA5BO,EAF0B,EAE1BA,KAAKa,EAFqB,EAErBA,QAKZ,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,0BAEZ,qBAAKA,UAAU,YAAf,SAEYT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADAA,EAAIC,aEhB5BgB,G,KAAa,WAAK,IAAD,EACQzC,mBAAS,CAAC,aADlB,mBACnB0C,EADmB,KACP3C,EADO,KAO1B,OACI,qCACI,8CACA,cAAE,EAAF,CAAcA,cAAeA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADJA,aClBlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.c6c6ae88.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport propTypes from \"prop-types\";\n\nfunction AddCategory({setCategories}) {\n    const [inputValue, setInputValue]=useState('');\n\n    const handleInputChange=(e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(categorias=>[ inputValue, ...categorias]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type = \"text\"\n                value = { inputValue }\n                onChange = { handleInputChange}\n            />\n        </form>\n        \n    )\n}\n\nAddCategory.propTypes={\n    setCategories: propTypes.func\n};\n\nexport default AddCategory\n","export const getGifs = async (category)=>{\n    const url= `https://api.giphy.com/v1/gifs/search?&q=${encodeURI(category)}&limit=100&api_key=vGJfLokKj6XmaE0aUILbntUjQQCL1JLr`\n    const resp=await fetch(url);\n    const { data }=await resp.json();\n    const gifs = data.map( img=>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n            \n        }\n    })\n    return gifs;\n}","import React from 'react';\n\nexport const GrifGridItem=({url, title})=>{\n    // console.log(img);\n    return(\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport {useFetchGifs} from '../hooks/useFetchGifs'\nimport { GrifGridItem } from \"./GifGridItem\";\nimport {getGifs} from '../helpers/getGifs'\n\nexport const GifGrid = ({category})=>{\n\n    const {data,loading}= useFetchGifs(category);\n    \n    // const [gifs, setGifs]=useState([]);\n\n\n    return(\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">cargando ...</p>}\n\n            <div className=\"card-grid\">\n                    {\n                        data.map( img =>(\n                            <GrifGridItem \n                                key={img.id}    \n                                { ...img}\n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n\n}\n\n\n","import {useState} from 'react'; \nimport {useEffect} from 'react'; \nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs=( category )=>{  \n\n    \n    const [state, setState]=useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n            getGifs(category)\n            .then( imgs=>{\n                    setState({\n                        data:imgs,\n                        loading: false\n                    })\n            });\n    },[category]);\n    \n\n    return state;\n}","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport AddCategory from './components/addCategory';\nimport { GifGrid } from './components/GifGrid';\nimport './index.css'\n\nexport const GifExpertApp=()=>{\n    const [categories, setCategories]=useState(['360 flip']);\n\n    // const handleAdd=()=>{\n    //     setCategories([...categories,'Skateboarding']);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            < AddCategory setCategories={setCategories}/>\n            <hr/>\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n            <ol>\n                {\n                    categories.map(category=>(\n                        <GifGrid\n                            key={ category }\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}